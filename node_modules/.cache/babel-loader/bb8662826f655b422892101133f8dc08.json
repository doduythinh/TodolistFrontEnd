{"ast":null,"code":"var _jsxFileName = \"D:\\\\todolistapplist\\\\src\\\\component\\\\childrenbodytask\\\\listboard\\\\listboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./listboard.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../store/action/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Listboard = () => {\n  _s();\n\n  const [title, setTitle] = useState();\n  const [isClickTitle, setIsClickTitle] = useState(false);\n  let listTask = useSelector(state => state.main.listTask);\n  let dispatch = useDispatch();\n\n  const changeValueTitle = event => {\n    event.preventDefault();\n    setTitle(event.target.value);\n  };\n\n  const postTaskTitle = async event => {\n    event.preventDefault();\n    let order = 1;\n    let orders;\n\n    if (listTask.data) {\n      listTask.data.length += order;\n      orders = order;\n      let action = await actions.AddTask(title, orders);\n      await dispatch(action);\n    }\n\n    setIsClickTitle(true);\n  };\n\n  const hideValue = () => {\n    setIsClickTitle(false);\n  };\n\n  const showValue = () => {\n    setIsClickTitle(true);\n  };\n\n  useEffect(() => {\n    let action = actions.GetTask();\n    dispatch(action);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containerListBoard\",\n    children: [listTask.data && listTask.data.map((res, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemadd-task\",\n        children: [!isClickTitle && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"itemadd-task__span\",\n          onClick: event => {\n            showValue();\n          },\n          children: res.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 42\n        }, this), isClickTitle && /*#__PURE__*/_jsxDEV(\"input\", {\n          value: res.title,\n          onClick: () => hideValue(),\n          onChange: () => hideValue()\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 40\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 26\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itemadd-task\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: event => {\n          postTaskTitle(event);\n        },\n        children: [isClickTitle && /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"add Task\",\n          name: \"title\",\n          onChange: event => changeValueTitle(event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: event => {\n            postTaskTitle(event);\n          },\n          children: \"Th\\xEAm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Listboard, \"EZbSCwrwRmHanSPHS28+UrBIX4Q=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Listboard;\nexport default Listboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listboard\");","map":{"version":3,"sources":["D:/todolistapplist/src/component/childrenbodytask/listboard/listboard.tsx"],"names":["React","useEffect","useState","useDispatch","useSelector","actions","Listboard","title","setTitle","isClickTitle","setIsClickTitle","listTask","state","main","dispatch","changeValueTitle","event","preventDefault","target","value","postTaskTitle","order","orders","data","length","action","AddTask","hideValue","showValue","GetTask","map","res","index"],"mappings":"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","sourcesContent":["import React, {FormEvent, useEffect, useState} from 'react';\r\nimport \"./listboard.scss\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport * as actions from \"../../../store/action/index\"\r\nconst Listboard = () => {\r\n    const [title,setTitle] = useState();\r\n    const [isClickTitle,setIsClickTitle] = useState(false as boolean);\r\n    let listTask = useSelector((state:any) => state.main.listTask);\r\n    let dispatch =  useDispatch();\r\n    const changeValueTitle = (event:any) => {\r\n        event.preventDefault();\r\n        setTitle(event.target.value)\r\n    }\r\n    const postTaskTitle = async (event:FormEvent<any >) =>{\r\n        event.preventDefault();\r\n        let order  = 1;\r\n        let orders:number;\r\n        if(listTask.data)\r\n        {\r\n            listTask.data.length += order;\r\n            orders = order;\r\n            let action = await actions.AddTask(title,orders);\r\n            await dispatch(action);\r\n        }\r\n        setIsClickTitle(true)\r\n    }\r\n    const hideValue = () => {\r\n        setIsClickTitle(false)\r\n    }\r\n    const showValue = () => {\r\n        setIsClickTitle(true)\r\n    }\r\n    useEffect(()=>{\r\n        let action = actions.GetTask();\r\n        dispatch(action);\r\n    },[])\r\n    return (\r\n        <div className=\"containerListBoard\">\r\n            {\r\n                listTask.data && listTask.data.map((res:any,index:number) => {\r\n                  return <div  className=\"itemadd-task\" key={index}>\r\n                      {!isClickTitle &&  <span className=\"itemadd-task__span\"  onClick={(event)=>{showValue()}}>{res.title}</span> }\r\n                      {isClickTitle && <input key={index} value={res.title} onClick={()=> hideValue()} onChange={()=>hideValue()}  />}\r\n                    </div>\r\n                })\r\n            }\r\n            <div className=\"itemadd-task\">\r\n                <form onSubmit={(event)=>{postTaskTitle(event)}}>\r\n                    { isClickTitle &&  <input placeholder=\"add Task\" name=\"title\" onChange={(event)=>changeValueTitle(event)} />}\r\n                    <button onClick={(event)=>{postTaskTitle(event)}}>ThÃªm</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Listboard;\r\n"]},"metadata":{},"sourceType":"module"}