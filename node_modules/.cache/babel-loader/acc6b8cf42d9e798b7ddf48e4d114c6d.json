{"ast":null,"code":"var _jsxFileName = \"D:\\\\todolistapplist\\\\src\\\\component\\\\childrenbodytask\\\\listboard\\\\listboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./listboard.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../store/action/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Listboard = () => {\n  _s();\n\n  const [title, setTitle] = useState();\n  let dispatch = useDispatch();\n\n  const changeValueTitle = event => {\n    event.preventDefault();\n    console.log(\"123123\", event.target.value);\n    setTitle(event.target.value);\n  };\n\n  const postTaskTitle = async event => {\n    event.preventDefault();\n    let action = actions.AddTask(title);\n    console.log(\"action12312\", action);\n    await dispatch(action);\n  };\n\n  useEffect(() => {\n    let action = actions.GetTask();\n    dispatch(action);\n  }, []);\n  let listTask = useSelector(state => state.main.listTask);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containerListBoard\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"itemadd-task\",\n      onSubmit: event => {\n        postTaskTitle(event);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"add Task\",\n        name: \"title\",\n        onChange: event => changeValueTitle(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Listboard, \"HR9PdVFLukE/lQEUQBk7eQDAMJI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Listboard;\nexport default Listboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listboard\");","map":{"version":3,"sources":["D:/todolistapplist/src/component/childrenbodytask/listboard/listboard.tsx"],"names":["React","useEffect","useState","useDispatch","useSelector","actions","Listboard","title","setTitle","dispatch","changeValueTitle","event","preventDefault","console","log","target","value","postTaskTitle","action","AddTask","GetTask","listTask","state","main"],"mappings":";;;AAAA,OAAOA,KAAP,IAA0BC,SAA1B,EAAqCC,QAArC,QAAoD,OAApD;AACA,OAAO,kBAAP;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAO,KAAKC,OAAZ,MAAyB,6BAAzB;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,EAAjC;AACA,MAAIO,QAAQ,GAAIN,WAAW,EAA3B;;AACA,QAAMO,gBAAgB,GAAIC,KAAD,IAAe;AACpCA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBH,KAAK,CAACI,MAAN,CAAaC,KAAlC;AACAR,IAAAA,QAAQ,CAACG,KAAK,CAACI,MAAN,CAAaC,KAAd,CAAR;AACH,GAJD;;AAKA,QAAMC,aAAa,GAAG,MAAON,KAAP,IAA2C;AAC7DA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIM,MAAM,GAAGb,OAAO,CAACc,OAAR,CAAgBZ,KAAhB,CAAb;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BI,MAA1B;AACA,UAAMT,QAAQ,CAACS,MAAD,CAAd;AACH,GALD;;AAMAjB,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIiB,MAAM,GAAGb,OAAO,CAACe,OAAR,EAAb;AACAX,IAAAA,QAAQ,CAACS,MAAD,CAAR;AACH,GAHQ,EAGP,EAHO,CAAT;AAIA,MAAIG,QAAQ,GAAGjB,WAAW,CAAEkB,KAAD,IAAeA,KAAK,CAACC,IAAN,CAAWF,QAA3B,CAA1B;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,2BAMI;AAAM,MAAA,SAAS,EAAC,cAAhB;AAA+B,MAAA,QAAQ,EAAGV,KAAD,IAAS;AAACM,QAAAA,aAAa,CAACN,KAAD,CAAb;AAAqB,OAAxE;AAAA,6BACI;AAAO,QAAA,WAAW,EAAC,UAAnB;AAA8B,QAAA,IAAI,EAAC,OAAnC;AAA2C,QAAA,QAAQ,EAAGA,KAAD,IAASD,gBAAgB,CAACC,KAAD;AAA9E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAhCD;;GAAML,S;UAEcH,W,EAgBDC,W;;;KAlBbE,S;AAkCN,eAAeA,SAAf","sourcesContent":["import React, {FormEvent, useEffect, useState} from 'react';\r\nimport \"./listboard.scss\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport * as actions from \"../../../store/action/index\"\r\nconst Listboard = () => {\r\n    const [title,setTitle] = useState();\r\n    let dispatch =  useDispatch();\r\n    const changeValueTitle = (event:any) => {\r\n        event.preventDefault();\r\n        console.log(\"123123\",event.target.value);\r\n        setTitle(event.target.value)\r\n    }\r\n    const postTaskTitle = async (event:FormEvent<HTMLFormElement>) =>{\r\n        event.preventDefault();\r\n        let action = actions.AddTask(title);\r\n        console.log(\"action12312\",action)\r\n        await dispatch(action);\r\n    }\r\n    useEffect(()=>{\r\n        let action = actions.GetTask();\r\n        dispatch(action);\r\n    },[])\r\n    let listTask = useSelector((state:any) => state.main.listTask);\r\n\r\n    return (\r\n        <div className=\"containerListBoard\">\r\n            {/*{*/}\r\n            {/*    listTask && listTask.map((res: any, index: number) => {*/}\r\n            {/*        return <div className=\"itemadd-task\">{res.title}</div>*/}\r\n            {/*    })*/}\r\n            {/*}*/}\r\n            <form className=\"itemadd-task\" onSubmit={(event)=>{postTaskTitle(event)}}>\r\n                <input placeholder=\"add Task\" name=\"title\" onChange={(event)=>changeValueTitle(event)} />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Listboard;\r\n"]},"metadata":{},"sourceType":"module"}