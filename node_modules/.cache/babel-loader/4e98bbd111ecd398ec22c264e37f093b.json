{"ast":null,"code":"var _jsxFileName = \"D:\\\\todolistapplist\\\\src\\\\component\\\\childrenbodytask\\\\listboard\\\\childrenlistboard\\\\childrenlistboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"../listboard.scss\";\nimport { useDispatch } from \"react-redux\";\nimport * as actions from \"../../../../store/action/index\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Childrenlistboard = ({\n  listTask,\n  indexState,\n  hideValue,\n  showValue\n}) => {\n  _s();\n\n  let dispatch = useDispatch();\n  let [hideshowAddTask, setHideShowAddTask] = useState(false);\n  let [valuePutTask, setValuePutTask] = useState();\n  let [indexInAddTask, setIndexInAddTask] = useState(0);\n\n  const changeValue = event => {\n    console.log(event.target.value);\n    setValuePutTask(event.target.value);\n  };\n\n  const putValueTask = async id => {\n    let action = await actions.putTask(id, valuePutTask);\n    await dispatch(action);\n  };\n\n  const showAddTask = (event, index) => {\n    event.preventDefault();\n    setIndexInAddTask(index);\n    setHideShowAddTask(true);\n  };\n\n  const hideAddTask = (event, index) => {\n    event.preventDefault();\n    setIndexInAddTask(index);\n    setHideShowAddTask(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: listTask && listTask.map((res, index) => {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"itemget--task\",\n        onSubmit: () => putValueTask(res._id),\n        children: [indexState === index ? /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"itemget--task__input\",\n          defaultValue: res.title,\n          onChange: event => changeValue(event),\n          onClick: () => hideValue(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 49\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"itemget--task__span\",\n          onClick: () => showValue(index),\n          children: res.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this), hideshowAddTask && indexInAddTask === index && /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: event => hideAddTask(event, index),\n          children: /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 127\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 77\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"itemget--task__AddTask\",\n          onClick: event => showAddTask(event, index),\n          children: [/*#__PURE__*/_jsxDEV(AddIcon, {\n            style: {\n              fontSize: \"15px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 118\n          }, this), \"Add Task\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 28\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_s(Childrenlistboard, \"mV5oYlH5t2PkMs/xGEym6F/puEM=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Childrenlistboard;\nexport default Childrenlistboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Childrenlistboard\");","map":{"version":3,"sources":["D:/todolistapplist/src/component/childrenbodytask/listboard/childrenlistboard/childrenlistboard.tsx"],"names":["React","useState","useDispatch","actions","AddIcon","Childrenlistboard","listTask","indexState","hideValue","showValue","dispatch","hideshowAddTask","setHideShowAddTask","valuePutTask","setValuePutTask","indexInAddTask","setIndexInAddTask","changeValue","event","console","log","target","value","putValueTask","id","action","putTask","showAddTask","index","preventDefault","hideAddTask","map","res","_id","title","fontSize"],"mappings":"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","sourcesContent":["import React, {FC, FormEvent, useMemo, useState} from 'react';\r\nimport \"../listboard.scss\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport * as actions from \"../../../../store/action/index\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\ninterface propsLisBoard {\r\n    listTask: Array<Object>,\r\n    indexState: number,\r\n    hideValue: (index: number) => void,\r\n    showValue: (index: number) => void,\r\n}\r\n\r\nconst Childrenlistboard: React.FC<propsLisBoard> = ({listTask, indexState, hideValue, showValue}) => {\r\n    let dispatch = useDispatch();\r\n    let [hideshowAddTask,setHideShowAddTask] = useState(false as boolean);\r\n    let [valuePutTask, setValuePutTask] = useState() as any;\r\n    let [indexInAddTask,setIndexInAddTask] = useState(0 as number);\r\n    const changeValue = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        console.log(event.target.value);\r\n        setValuePutTask(event.target.value);\r\n    }\r\n    const putValueTask = async (id: number) => {\r\n        let action = await actions.putTask(id, valuePutTask);\r\n        await dispatch(action);\r\n    }\r\n    const showAddTask = (event:any,index:number) => {\r\n        event.preventDefault();\r\n        setIndexInAddTask(index);\r\n        setHideShowAddTask(true)\r\n    }\r\n    const hideAddTask = (event:any,index:number) => {\r\n        event.preventDefault();\r\n        setIndexInAddTask(index);\r\n        setHideShowAddTask(false)\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                listTask && listTask.map((res: any, index: number) => {\r\n                    return <form className=\"itemget--task\" key={index}\r\n                                 onSubmit={() => putValueTask(res._id) }>\r\n                        {indexState === index ? <input className=\"itemget--task__input\" key={index} defaultValue={res.title}\r\n                                                       onChange={(event) => changeValue(event)}\r\n                                                       onClick={() => hideValue(index)}/> :\r\n                            <span className=\"itemget--task__span\" onClick={() => showValue(index)}>{res.title}</span>}\r\n                        {\r\n                            hideshowAddTask &&  indexInAddTask === index && <div  onClick={(event)=>hideAddTask(event,index)}><input  /></div>\r\n                        }\r\n                            <button  className=\"itemget--task__AddTask\" onClick={(event)=>showAddTask(event,index)} ><AddIcon style={{fontSize:\"15px\"}}  />Add Task</button>\r\n                    </form>\r\n                })\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Childrenlistboard;\r\n"]},"metadata":{},"sourceType":"module"}