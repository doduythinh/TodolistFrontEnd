{"ast":null,"code":"import * as actionTypes from \"../action/actiontype\";\nimport { updateObject } from \"../shared/utility\";\nconst initialState = {\n  isLoad: false,\n  tokenCompare: '',\n  listTask: [],\n  isTask: false\n};\n\nconst ListBoard = (action, state) => {\n  return updateObject(state, {\n    listTask: action.title\n  });\n};\n\n_c = ListBoard;\n\nconst mainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_TASK_LIST_APP:\n      return ListBoard(action, state);\n\n    default:\n      return state;\n  }\n};\n\nexport default mainReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListBoard\");","map":{"version":3,"sources":["D:/todolistapplist/src/store/redux/main.tsx"],"names":["actionTypes","updateObject","initialState","isLoad","tokenCompare","listTask","isTask","ListBoard","action","state","title","mainReducer","type","GET_TASK_LIST_APP"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,sBAA7B;AACA,SAASC,YAAT,QAA6B,mBAA7B;AASA,MAAMC,YAA4B,GAAG;AACjCC,EAAAA,MAAM,EAAE,KADyB;AAEjCC,EAAAA,YAAY,EAAE,EAFmB;AAGjCC,EAAAA,QAAQ,EAAE,EAHuB;AAIjCC,EAAAA,MAAM,EAAE;AAJyB,CAArC;;AAMA,MAAMC,SAAS,GAAG,CAACC,MAAD,EAAaC,KAAb,KAA2B;AACzC,SAAOR,YAAY,CAACQ,KAAD,EAAO;AAACJ,IAAAA,QAAQ,EAAEG,MAAM,CAACE;AAAlB,GAAP,CAAnB;AACH,CAFD;;KAAMH,S;;AAIN,MAAMI,WAAW,GAAG,CAACF,KAAK,GAAGP,YAAT,EAAsBM,MAAtB,KAAqC;AACrD,UAAQA,MAAM,CAACI,IAAf;AAEI,SAAKZ,WAAW,CAACa,iBAAjB;AACI,aAAON,SAAS,CAACC,MAAD,EAAQC,KAAR,CAAhB;;AACJ;AACI,aAAOA,KAAP;AALR;AAOH,CARD;;AAWA,eAAeE,WAAf","sourcesContent":["import * as actionTypes from \"../action/actiontype\";\r\nimport { updateObject } from \"../shared/utility\";\r\n\r\ninterface tsInitialState {\r\n    isLoad: boolean,\r\n    tokenCompare: string,\r\n    listTask: [],\r\n    isTask: boolean,\r\n}\r\n\r\nconst initialState: tsInitialState = {\r\n    isLoad: false,\r\n    tokenCompare: '',\r\n    listTask: [],\r\n    isTask: false,\r\n}\r\nconst ListBoard = (action: any,state:any) => {\r\n    return updateObject(state,{listTask: action.title})\r\n}\r\n\r\nconst mainReducer = (state = initialState,action:any) => {\r\n    switch (action.type)\r\n    {\r\n        case actionTypes.GET_TASK_LIST_APP:\r\n            return ListBoard(action,state);\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default mainReducer;\r\n"]},"metadata":{},"sourceType":"module"}