{"ast":null,"code":"var _jsxFileName = \"D:\\\\todolistapplist\\\\src\\\\component\\\\childrenbodytask\\\\listboard\\\\childrenlistboard\\\\childrenlistboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"../listboard.scss\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Childrenlistboard = ({\n  listTask,\n  indexState,\n  hideValue,\n  showValue\n}) => {\n  _s();\n\n  let dispatch = useDispatch();\n  let [valuePutTask, setValuePutTask] = useState();\n\n  const changeValue = event => {\n    setValuePutTask(event.target.value);\n  };\n\n  const putValueTask = id => {// actions.putTask();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: listTask && listTask.map((res, index) => {\n      console.log(\"id in app\", res._id);\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"itemget-task\",\n        onSubmit: () => putValueTask(res._id),\n        children: indexState === index ? /*#__PURE__*/_jsxDEV(\"input\", {\n          defaultValue: res.title,\n          onChange: () => changeValue(event),\n          onClick: () => hideValue(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 49\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"itemget-task__span\",\n          onClick: () => showValue(index),\n          children: res.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 28\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_s(Childrenlistboard, \"zbKSPAbxamQXnqdsiy/c3VRJAo8=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Childrenlistboard;\nexport default Childrenlistboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Childrenlistboard\");","map":{"version":3,"sources":["D:/todolistapplist/src/component/childrenbodytask/listboard/childrenlistboard/childrenlistboard.tsx"],"names":["React","useState","useDispatch","Childrenlistboard","listTask","indexState","hideValue","showValue","dispatch","valuePutTask","setValuePutTask","changeValue","event","target","value","putValueTask","id","map","res","index","console","log","_id","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAO,mBAAP;AACA,SAAQC,WAAR,QAA0B,aAA1B;;;;AAQA,MAAMC,iBAAyC,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA,UAAV;AAAqBC,EAAAA,SAArB;AAA+BC,EAAAA;AAA/B,CAAD,KAA+C;AAAA;;AAC7F,MAAIC,QAAQ,GAAGN,WAAW,EAA1B;AACA,MAAI,CAACO,YAAD,EAAcC,eAAd,IAAiCT,QAAQ,EAA7C;;AACA,QAAMU,WAAW,GAAIC,KAAD,IAA4B;AAC5CF,IAAAA,eAAe,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACH,GAFD;;AAGA,QAAMC,YAAY,GAAIC,EAAD,IAAe,CAChC;AACH,GAFD;;AAGA,sBACI;AAAA,cAEQZ,QAAQ,IAAIA,QAAQ,CAACa,GAAT,CAAa,CAACC,GAAD,EAAWC,KAAX,KAA6B;AAClDC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBH,GAAG,CAACI,GAA5B;AACA,0BAAO;AAAM,QAAA,EAAE,EAAC,cAAT;AAAoC,QAAA,QAAQ,EAAE,MAAIP,YAAY,CAACG,GAAG,CAACI,GAAL,CAA9D;AAAA,kBACFjB,UAAU,KAAKc,KAAf,gBAAuB;AAAmB,UAAA,YAAY,EAAED,GAAG,CAACK,KAArC;AAA4C,UAAA,QAAQ,EAAE,MAAIZ,WAAW,CAACC,KAAD,CAArE;AAA8E,UAAA,OAAO,EAAE,MAAMN,SAAS,CAACa,KAAD;AAAtG,WAAYA,KAAZ;AAAA;AAAA;AAAA;AAAA,gBAAvB,gBACG;AAAM,UAAA,SAAS,EAAC,oBAAhB;AAAqC,UAAA,OAAO,EAAE,MAAMZ,SAAS,CAACY,KAAD,CAA7D;AAAA,oBAAuED,GAAG,CAACK;AAA3E;AAAA;AAAA;AAAA;AAAA;AAFD,SAA6BJ,KAA7B;AAAA;AAAA;AAAA;AAAA,cAAP;AAIH,KANW;AAFpB,mBADJ;AAaH,CAtBD;;GAAMhB,iB;UACaD,W;;;KADbC,iB;AAwBN,eAAeA,iBAAf","sourcesContent":["import React, {FC, useState} from 'react';\r\nimport \"../listboard.scss\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport * as actions from \"../../../../store/action/index\";\r\ninterface propsLisBoard {\r\n    listTask:Array<Object>,\r\n    indexState:number,\r\n    hideValue: (index: number) => void,\r\n    showValue: (index: number) => void,\r\n}\r\nconst Childrenlistboard:React.FC<propsLisBoard> = ({listTask,indexState,hideValue,showValue}) => {\r\n    let dispatch = useDispatch();\r\n    let [valuePutTask,setValuePutTask] = useState();\r\n    const changeValue = (event:HTMLInputElement) => {\r\n        setValuePutTask(event.target.value);\r\n    }\r\n    const putValueTask = (id:number) => {\r\n        // actions.putTask();\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                listTask && listTask.map((res: any, index: number) => {\r\n                    console.log(\"id in app\",res._id)\r\n                    return <form id=\"itemget-task\" key={index} onSubmit={()=>putValueTask(res._id)} >\r\n                        {indexState === index ? <input key={index} defaultValue={res.title} onChange={()=>changeValue(event)} onClick={() => hideValue(index)}/> :\r\n                            <span className=\"itemget-task__span\" onClick={() => showValue(index)}>{res.title}</span>}\r\n                    </form>\r\n                })\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Childrenlistboard;\r\n"]},"metadata":{},"sourceType":"module"}