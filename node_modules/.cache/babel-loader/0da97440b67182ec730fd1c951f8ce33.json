{"ast":null,"code":"import * as actionTypes from \"../action/actiontype\";\nimport { updateObject } from \"../shared/utility\";\nconst initialState = {\n  tokenCompare: '',\n  listTask: [],\n  isMenu: false\n};\n\nconst ListBoard = (action, state) => {\n  return updateObject(state, {\n    listTask: action.title\n  });\n};\n\n_c = ListBoard;\n\nconst setMenu = (action, state) => {\n  return updateObject(state, {\n    isMenu: action.isMenu\n  });\n};\n\nconst mainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_TASK_LIST_APP:\n      return ListBoard(action, state);\n\n    case actionTypes.IS_MENU_APP:\n      return setMenu(action, state);\n\n    default:\n      return state;\n  }\n};\n\nexport default mainReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListBoard\");","map":{"version":3,"sources":["D:/todolistapplist/src/store/redux/main.tsx"],"names":["actionTypes","updateObject","initialState","tokenCompare","listTask","isMenu","ListBoard","action","state","title","setMenu","mainReducer","type","GET_TASK_LIST_APP","IS_MENU_APP"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,sBAA7B;AACA,SAASC,YAAT,QAA6B,mBAA7B;AAQA,MAAMC,YAA4B,GAAG;AACjCC,EAAAA,YAAY,EAAE,EADmB;AAEjCC,EAAAA,QAAQ,EAAE,EAFuB;AAGjCC,EAAAA,MAAM,EAAE;AAHyB,CAArC;;AAKA,MAAMC,SAAS,GAAG,CAACC,MAAD,EAAaC,KAAb,KAA2B;AACzC,SAAOP,YAAY,CAACO,KAAD,EAAO;AAACJ,IAAAA,QAAQ,EAAEG,MAAM,CAACE;AAAlB,GAAP,CAAnB;AACH,CAFD;;KAAMH,S;;AAGN,MAAMI,OAAO,GAAG,CAACH,MAAD,EAAaC,KAAb,KAA2B;AACvC,SAAOP,YAAY,CAACO,KAAD,EAAO;AAACH,IAAAA,MAAM,EAAEE,MAAM,CAACF;AAAhB,GAAP,CAAnB;AACH,CAFD;;AAIA,MAAMM,WAAW,GAAG,CAACH,KAAK,GAAGN,YAAT,EAAsBK,MAAtB,KAAqC;AACrD,UAAQA,MAAM,CAACK,IAAf;AAEI,SAAKZ,WAAW,CAACa,iBAAjB;AACI,aAAOP,SAAS,CAACC,MAAD,EAAQC,KAAR,CAAhB;;AACJ,SAAKR,WAAW,CAACc,WAAjB;AACI,aAAOJ,OAAO,CAACH,MAAD,EAAQC,KAAR,CAAd;;AACJ;AACI,aAAOA,KAAP;AAPR;AASH,CAVD;;AAaA,eAAeG,WAAf","sourcesContent":["import * as actionTypes from \"../action/actiontype\";\r\nimport { updateObject } from \"../shared/utility\";\r\n\r\ninterface tsInitialState {\r\n    tokenCompare: string,\r\n    listTask: [],\r\n    isMenu: boolean\r\n}\r\n\r\nconst initialState: tsInitialState = {\r\n    tokenCompare: '',\r\n    listTask: [],\r\n    isMenu: false\r\n}\r\nconst ListBoard = (action: any,state:any) => {\r\n    return updateObject(state,{listTask: action.title})\r\n}\r\nconst setMenu = (action: any,state:any) => {\r\n    return updateObject(state,{isMenu: action.isMenu})\r\n}\r\n\r\nconst mainReducer = (state = initialState,action:any) => {\r\n    switch (action.type)\r\n    {\r\n        case actionTypes.GET_TASK_LIST_APP:\r\n            return ListBoard(action,state);\r\n        case actionTypes.IS_MENU_APP:\r\n            return setMenu(action,state);\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default mainReducer;\r\n"]},"metadata":{},"sourceType":"module"}