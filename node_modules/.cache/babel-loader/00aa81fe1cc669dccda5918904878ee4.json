{"ast":null,"code":"var _jsxFileName = \"D:\\\\todolistapplist\\\\src\\\\component\\\\childrenbodytask\\\\listboard\\\\listboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./listboard.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../store/action/index\";\nimport Childrenlistboard from \"./childrenlistboard/childrenlistboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Listboard = () => {\n  _s();\n\n  const [title, setTitle] = useState();\n  const [isClickTitle, setIsClickTitle] = useState(false);\n  const [order, setOrder] = useState(0);\n  const [indexs, setIndexs] = useState(0);\n  let listTask = useSelector(state => state.main.listTask);\n  let dispatch = useDispatch();\n\n  const changeValueTitle = event => {\n    event.preventDefault();\n    setTitle(event.target.value);\n  };\n\n  const postTaskTitle = async event => {\n    event.preventDefault();\n\n    if (listTask.data) {\n      listTask.data.length += 1;\n      setOrder(listTask.data.length);\n      let action = await actions.AddTask(title, order);\n      await dispatch(action);\n    }\n\n    setIsClickTitle(true);\n  };\n\n  const hideValue = index => {\n    setIndexs(index);\n  };\n\n  const showValue = index => {\n    setIndexs(index);\n  };\n\n  useEffect(() => {\n    let action = actions.GetTask();\n    dispatch(action);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containerListBoard\",\n    children: [/*#__PURE__*/_jsxDEV(Childrenlistboard, {\n      listTask: listTask.data,\n      indexState: indexs,\n      hideValue: hideValue,\n      showValue: showValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"itemadd-task\",\n        onSubmit: event => {\n          postTaskTitle(event);\n        },\n        children: [isClickTitle && /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"add Task\",\n          name: \"title\",\n          onChange: event => changeValueTitle(event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: event => {\n            postTaskTitle(event);\n          },\n          children: \"Th\\xEAm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Listboard, \"gsRtmE7/XuHIfArSak39OUPS8ps=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Listboard;\nexport default Listboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listboard\");","map":{"version":3,"sources":["D:/todolistapplist/src/component/childrenbodytask/listboard/listboard.tsx"],"names":["React","useEffect","useState","useDispatch","useSelector","actions","Childrenlistboard","Listboard","title","setTitle","isClickTitle","setIsClickTitle","order","setOrder","indexs","setIndexs","listTask","state","main","dispatch","changeValueTitle","event","preventDefault","target","value","postTaskTitle","data","length","action","AddTask","hideValue","index","showValue","GetTask"],"mappings":"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","sourcesContent":["import React, {FormEvent, useEffect, useState} from 'react';\r\nimport \"./listboard.scss\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport * as actions from \"../../../store/action/index\"\r\nimport Childrenlistboard from \"./childrenlistboard/childrenlistboard\";\r\n\r\nconst Listboard = () => {\r\n    const [title, setTitle] = useState();\r\n    const [isClickTitle, setIsClickTitle] = useState(false as boolean);\r\n    const [order, setOrder] = useState(0 as number);\r\n    const [indexs, setIndexs] = useState(0 as number);\r\n    let listTask = useSelector((state: any) => state.main.listTask);\r\n    let dispatch = useDispatch();\r\n    const changeValueTitle = (event: any) => {\r\n        event.preventDefault();\r\n        setTitle(event.target.value)\r\n    }\r\n    const postTaskTitle = async (event: FormEvent<any>) => {\r\n        event.preventDefault();\r\n        if (listTask.data) {\r\n            listTask.data.length += 1;\r\n            setOrder(listTask.data.length)\r\n            let action = await actions.AddTask(title, order);\r\n            await dispatch(action);\r\n        }\r\n        setIsClickTitle(true)\r\n    }\r\n    const hideValue = (index: number) => {\r\n        setIndexs(index)\r\n    }\r\n    const showValue = (index: number) => {\r\n        setIndexs(index);\r\n    }\r\n    useEffect(() => {\r\n        let action = actions.GetTask();\r\n        dispatch(action);\r\n    }, [])\r\n    return (\r\n        <div className=\"containerListBoard\">\r\n            <Childrenlistboard\r\n                listTask={listTask.data}\r\n                indexState={indexs}\r\n                hideValue={hideValue}\r\n                showValue={showValue} />\r\n\r\n            <div >\r\n                <form className=\"itemadd-task\" onSubmit={(event) => {\r\n                    postTaskTitle(event)\r\n                }}>\r\n                    {isClickTitle &&\r\n                    <input placeholder=\"add Task\" name=\"title\" onChange={(event) => changeValueTitle(event)} />}\r\n                    <button onClick={(event) => {\r\n                        postTaskTitle(event)\r\n                    }}>ThÃªm\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Listboard;\r\n"]},"metadata":{},"sourceType":"module"}