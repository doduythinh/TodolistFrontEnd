{"ast":null,"code":"var _jsxFileName = \"D:\\\\todolistapplist\\\\src\\\\component\\\\Navbody\\\\NavbodyTask\\\\NavbodyTask.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../../store/action/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavBodyTask = ({}) => {\n  _s();\n\n  let isTask = useSelector(state => state.main.isTask);\n  let isMenu = useSelector(state => state.main.isMenu);\n  let dispatch = useDispatch();\n\n  const setShowMenu = () => {\n    let action = actions.setMenu(false);\n    dispatch(action);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isTask && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itemNavbody-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemNavbody-left--avatar\",\n        children: [isMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemNavbody-left__menuShow\",\n          onClick: () => setShowMenu(),\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {\n            color: \"primary\",\n            style: {\n              fontSize: '30px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemNavbody-left--personal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemNavbody-left--controlTask\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemNavbody-left--mytask\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"My Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemNavbody-left--menu\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: navlink.map((res, index) => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"itemNavbody-left--menuli\",\n                onClick: () => {\n                  ClickTabBar(res.name, index);\n                },\n                children: res.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 44\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 28\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NavBodyTask, \"xYy3A+kIgnQVGAzIco3i2jMjRCY=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = NavBodyTask;\nexport default NavBodyTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBodyTask\");","map":{"version":3,"sources":["D:/todolistapplist/src/component/Navbody/NavbodyTask/NavbodyTask.tsx"],"names":["React","MenuIcon","useDispatch","useSelector","actions","NavBodyTask","isTask","state","main","isMenu","dispatch","setShowMenu","action","setMenu","fontSize","navlink","map","res","index","ClickTabBar","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAwB,OAAxB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAO,KAAKC,OAAZ,MAAyB,6BAAzB;;;AAKA,MAAOC,WAAqB,GAAG,CAAC,EAAD,KAAQ;AAAA;;AACnC,MAAIC,MAAe,GAAGH,WAAW,CAAEI,KAAD,IAAgBA,KAAK,CAACC,IAAN,CAAWF,MAA5B,CAAjC;AACA,MAAIG,MAAe,GAAGN,WAAW,CAAEI,KAAD,IAAgBA,KAAK,CAACC,IAAN,CAAWC,MAA5B,CAAjC;AACA,MAAIC,QAAQ,GAAGR,WAAW,EAA1B;;AACA,QAAMS,WAAW,GAAG,MAAM;AACtB,QAAIC,MAAM,GAAGR,OAAO,CAACS,OAAR,CAAgB,KAAhB,CAAb;AACAH,IAAAA,QAAQ,CAACE,MAAD,CAAR;AACH,GAHD;;AAIA,sBACI;AAAA,cAEQN,MAAM,iBAAK;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACP;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA,mBAEQG,MAAM,iBAAM;AAAK,UAAA,SAAS,EAAC,4BAAf;AAA4C,UAAA,OAAO,EAAE,MAAME,WAAW,EAAtE;AAAA,iCACR,QAAC,QAAD;AAAU,YAAA,KAAK,EAAC,SAAhB;AAA0B,YAAA,KAAK,EAAE;AAACG,cAAAA,QAAQ,EAAE;AAAX;AAAjC;AAAA;AAAA;AAAA;AAAA;AADQ;AAAA;AAAA;AAAA;AAAA,gBAFpB,eAMI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADO,eAUP;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA,iCACI;AAAA,sBACKC,OAAO,CAACC,GAAR,CAAY,CAACC,GAAD,EAAWC,KAAX,KAAqB;AAC9B,kCAAO;AAAI,gBAAA,SAAS,EAAC,0BAAd;AAAqD,gBAAA,OAAO,EAAE,MAAM;AACvEC,kBAAAA,WAAW,CAACF,GAAG,CAACG,IAAL,EAAWF,KAAX,CAAX;AACH,iBAFM;AAAA,0BAEHD,GAAG,CAACG;AAFD,iBAA8CF,KAA9C;AAAA;AAAA;AAAA;AAAA,sBAAP;AAGH,aAJA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVO;AAAA;AAAA;AAAA;AAAA;AAAA;AAFnB;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CAvCD;;GAAOb,W;UACmBF,W,EACAA,W,EACPD,W;;;KAHZG,W;AAyCP,eAAeA,WAAf","sourcesContent":["import React, {FC} from 'react';\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport * as actions from \"../../../store/action/index\";\r\n\r\ninterface props {\r\n\r\n}\r\nconst  NavBodyTask:FC<props> = ({}) => {\r\n    let isTask: boolean = useSelector((state: any) => state.main.isTask);\r\n    let isMenu: boolean = useSelector((state: any) => state.main.isMenu);\r\n    let dispatch = useDispatch();\r\n    const setShowMenu = () => {\r\n        let action = actions.setMenu(false);\r\n        dispatch(action);\r\n    }\r\n    return (\r\n        <div>\r\n            {\r\n                isTask &&  <div className=\"itemNavbody-left\">\r\n                    <div className=\"itemNavbody-left--avatar\">\r\n                        {\r\n                            isMenu  &&  <div className=\"itemNavbody-left__menuShow\" onClick={() => setShowMenu()}>\r\n                                <MenuIcon color=\"primary\" style={{fontSize: '30px'}}/>\r\n                            </div>\r\n                        }\r\n                        <div className=\"itemNavbody-left--personal\">\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"itemNavbody-left--controlTask\">\r\n                        <div className=\"itemNavbody-left--mytask\">\r\n                            <h3>My Task</h3>\r\n                        </div>\r\n                        <div className=\"itemNavbody-left--menu\">\r\n                            <ul>\r\n                                {navlink.map((res: any, index) => {\r\n                                    return <li className=\"itemNavbody-left--menuli\" key={index} onClick={() => {\r\n                                        ClickTabBar(res.name, index)\r\n                                    }}>{res.name}</li>\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBodyTask;\r\n"]},"metadata":{},"sourceType":"module"}