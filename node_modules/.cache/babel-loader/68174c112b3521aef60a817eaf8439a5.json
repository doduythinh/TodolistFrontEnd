{"ast":null,"code":"var _jsxFileName = \"D:\\\\todolistapplist\\\\src\\\\component\\\\Navbody\\\\navbody.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./navbody.scss\";\nimport Logout from \"./logout/logout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../store/action\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { tabBar } from \"../childrenbodytask/constant/constant\";\nimport NavbodyHome from \"./NavbodyHome/NavbodyHome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst navlink = [{\n  name: tabBar.List\n}, {\n  name: tabBar.Board\n}, {\n  name: tabBar.Calendar\n}, {\n  name: tabBar.Files\n}];\n\nconst Navbody = ({\n  switchs\n}) => {\n  _s();\n\n  const [isPoPupLogout, setIsPoPupLogout] = useState(false);\n  let dispatch = useDispatch();\n  let isMenu = useSelector(state => state.main.isMenu);\n  let isHome = useSelector(state => state.main.isHome);\n  let isTask = useSelector(state => state.main.isTask);\n\n  const clickLogout = () => {\n    setIsPoPupLogout(!isPoPupLogout);\n  };\n\n  const ClickTabBar = (name, index) => {\n    let boder = document.getElementsByClassName(\"itemNavbody-left--menuli\");\n\n    for (let i = 0; i < boder.length; i++) {\n      boder[i].style.borderBottom = \"\";\n    }\n\n    boder[index].style.borderBottom = \"2px solid #4490FF\";\n    switchs(name);\n  };\n\n  const setShowMenu = () => {\n    let action = actions.setMenu(false);\n    dispatch(action);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containerNavBody\",\n    children: [/*#__PURE__*/_jsxDEV(NavbodyHome, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), isTask && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itemNavbody-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemNavbody-left--avatar\",\n        children: [isMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemNavbody-left__menuShow\",\n          onClick: () => setShowMenu(),\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {\n            color: \"primary\",\n            style: {\n              fontSize: '30px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemNavbody-left--personal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemNavbody-left--controlTask\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemNavbody-left--mytask\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"My Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemNavbody-left--menu\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: navlink.map((res, index) => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"itemNavbody-left--menuli\",\n                onClick: () => {\n                  ClickTabBar(res.name, index);\n                },\n                children: res.name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 44\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itemNavbody-right\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemNavbody-right--one\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemNavbody-right--personal\",\n          onClick: () => clickLogout(),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"DT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), isPoPupLogout && /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Navbody, \"wSHnscK4i9NIgDJt3p7niJdLQaw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Navbody;\nexport default Navbody;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbody\");","map":{"version":3,"sources":["D:/todolistapplist/src/component/Navbody/navbody.tsx"],"names":["React","useState","Logout","useDispatch","useSelector","actions","MenuIcon","tabBar","NavbodyHome","navlink","name","List","Board","Calendar","Files","Navbody","switchs","isPoPupLogout","setIsPoPupLogout","dispatch","isMenu","state","main","isHome","isTask","clickLogout","ClickTabBar","index","boder","document","getElementsByClassName","i","length","style","borderBottom","setShowMenu","action","setMenu","fontSize","map","res"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport \"./navbody.scss\";\r\nimport Logout from \"./logout/logout\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport * as actions from \"../../store/action\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport {tabBar} from \"../childrenbodytask/constant/constant\";\r\nimport NavbodyHome from \"./NavbodyHome/NavbodyHome\";\r\n\r\nconst navlink = [\r\n    {\r\n        name:tabBar.List,\r\n    },\r\n    {\r\n        name:tabBar.Board,\r\n    },\r\n    {\r\n        name:tabBar.Calendar,\r\n    },\r\n    {\r\n        name:tabBar.Files,\r\n    }\r\n]\r\ninterface props {\r\n    switchs: (name: string) => void,\r\n}\r\n\r\nconst Navbody: React.FC<props> = ({switchs}) => {\r\n    const [isPoPupLogout, setIsPoPupLogout] = useState(false as boolean);\r\n    let dispatch = useDispatch();\r\n    let isMenu: boolean = useSelector((state: any) => state.main.isMenu);\r\n    let isHome: boolean = useSelector((state: any) => state.main.isHome);\r\n    let isTask: boolean = useSelector((state: any) => state.main.isTask);\r\n    const clickLogout = () => {\r\n        setIsPoPupLogout(!isPoPupLogout)\r\n    }\r\n    const ClickTabBar = (name: string, index: number) => {\r\n        let boder = document.getElementsByClassName(\"itemNavbody-left--menuli\") as any;\r\n        for (let i = 0; i < boder.length; i++) {\r\n            boder[i].style.borderBottom = \"\";\r\n        }\r\n        boder[index].style.borderBottom = \"2px solid #4490FF\";\r\n        switchs(name);\r\n    }\r\n    const setShowMenu = () => {\r\n        let action = actions.setMenu(false);\r\n        dispatch(action);\r\n    }\r\n    return (\r\n        <div className=\"containerNavBody\">\r\n            <NavbodyHome />\r\n            {\r\n                isTask &&  <div className=\"itemNavbody-left\">\r\n                    <div className=\"itemNavbody-left--avatar\">\r\n                        {\r\n                            isMenu  &&  <div className=\"itemNavbody-left__menuShow\" onClick={() => setShowMenu()}>\r\n                                <MenuIcon color=\"primary\" style={{fontSize: '30px'}}/>\r\n                            </div>\r\n                        }\r\n                        <div className=\"itemNavbody-left--personal\">\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"itemNavbody-left--controlTask\">\r\n                        <div className=\"itemNavbody-left--mytask\">\r\n                            <h3>My Task</h3>\r\n                        </div>\r\n                        <div className=\"itemNavbody-left--menu\">\r\n                            <ul>\r\n                                {navlink.map((res: any, index) => {\r\n                                    return <li className=\"itemNavbody-left--menuli\" key={index} onClick={() => {\r\n                                        ClickTabBar(res.name, index)\r\n                                    }}>{res.name}</li>\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n            <div className=\"itemNavbody-right\">\r\n                <div className=\"itemNavbody-right--one\">\r\n                    <div className=\"itemNavbody-right--personal\" onClick={() => clickLogout()}>\r\n                        <span>DT</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                isPoPupLogout && <Logout/>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbody;\r\n"]},"metadata":{},"sourceType":"module"}