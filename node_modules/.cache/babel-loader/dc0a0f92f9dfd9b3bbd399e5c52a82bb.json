{"ast":null,"code":"var _jsxFileName = \"D:\\\\todolistapplist\\\\src\\\\component\\\\childrenbodytask\\\\listboard\\\\childrenlistboard\\\\childrenlistboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"../listboard.scss\";\nimport { useDispatch } from \"react-redux\";\nimport * as actions from \"../../../../store/action/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Childrenlistboard = ({\n  listTask,\n  indexState,\n  hideValue,\n  showValue\n}) => {\n  _s();\n\n  let dispatch = useDispatch();\n  let [hideshowAddTask, setHideShowAddTask] = useState(false);\n  let [valuePutTask, setValuePutTask] = useState();\n\n  const changeValue = event => {\n    setValuePutTask(event.target.value);\n  };\n\n  const putValueTask = async id => {\n    let action = await actions.putTask(id, valuePutTask);\n    await dispatch(action);\n  };\n\n  const showAddTask = () => {\n    setHideShowAddTask(true);\n  };\n\n  const hideAddTask = () => {\n    setHideShowAddTask(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: listTask && listTask.map((res, index) => {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"itemget-task\",\n        onSubmit: () => valuePutTask ? putValueTask(res._id) : '',\n        children: [indexState === index ? /*#__PURE__*/_jsxDEV(\"input\", {\n          defaultValue: res.title,\n          onChange: event => changeValue(event),\n          onClick: () => hideValue(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 49\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"itemget-task__span\",\n          onClick: () => showValue(index),\n          children: res.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"itemget-task__AddTask\",\n          onClick: () => showAddTask(),\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 28\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_s(Childrenlistboard, \"blIL3Wqbipbl+R2/xPQDIuYqlNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Childrenlistboard;\nexport default Childrenlistboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Childrenlistboard\");","map":{"version":3,"sources":["D:/todolistapplist/src/component/childrenbodytask/listboard/childrenlistboard/childrenlistboard.tsx"],"names":["React","useState","useDispatch","actions","Childrenlistboard","listTask","indexState","hideValue","showValue","dispatch","hideshowAddTask","setHideShowAddTask","valuePutTask","setValuePutTask","changeValue","event","target","value","putValueTask","id","action","putTask","showAddTask","hideAddTask","map","res","index","_id","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAuCC,QAAvC,QAAsD,OAAtD;AACA,OAAO,mBAAP;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAO,KAAKC,OAAZ,MAAyB,gCAAzB;;;;AASA,MAAMC,iBAA0C,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,UAAX;AAAuBC,EAAAA,SAAvB;AAAkCC,EAAAA;AAAlC,CAAD,KAAkD;AAAA;;AACjG,MAAIC,QAAQ,GAAGP,WAAW,EAA1B;AACA,MAAI,CAACQ,eAAD,EAAiBC,kBAAjB,IAAuCV,QAAQ,CAAC,KAAD,CAAnD;AACA,MAAI,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,EAA9C;;AACA,QAAMa,WAAW,GAAIC,KAAD,IAAgD;AAChEF,IAAAA,eAAe,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACH,GAFD;;AAGA,QAAMC,YAAY,GAAG,MAAOC,EAAP,IAAsB;AACvC,QAAIC,MAAM,GAAG,MAAMjB,OAAO,CAACkB,OAAR,CAAgBF,EAAhB,EAAoBP,YAApB,CAAnB;AACA,UAAMH,QAAQ,CAACW,MAAD,CAAd;AACH,GAHD;;AAIA,QAAME,WAAW,GAAG,MAAM;AACtBX,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,GAFD;;AAGA,QAAMY,WAAW,GAAG,MAAM;AACtBZ,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,GAFD;;AAGA,sBACI;AAAA,cAEQN,QAAQ,IAAIA,QAAQ,CAACmB,GAAT,CAAa,CAACC,GAAD,EAAWC,KAAX,KAA6B;AAClD,0BAAO;AAAM,QAAA,SAAS,EAAC,cAAhB;AACM,QAAA,QAAQ,EAAE,MAAMd,YAAY,GAAGM,YAAY,CAACO,GAAG,CAACE,GAAL,CAAf,GAA2B,EAD7D;AAAA,mBAEFrB,UAAU,KAAKoB,KAAf,gBAAuB;AAAmB,UAAA,YAAY,EAAED,GAAG,CAACG,KAArC;AACO,UAAA,QAAQ,EAAGb,KAAD,IAAWD,WAAW,CAACC,KAAD,CADvC;AAEO,UAAA,OAAO,EAAE,MAAMR,SAAS,CAACmB,KAAD;AAF/B,WAAYA,KAAZ;AAAA;AAAA;AAAA;AAAA,gBAAvB,gBAGG;AAAM,UAAA,SAAS,EAAC,oBAAhB;AAAqC,UAAA,OAAO,EAAE,MAAMlB,SAAS,CAACkB,KAAD,CAA7D;AAAA,oBAAuED,GAAG,CAACG;AAA3E;AAAA;AAAA;AAAA;AAAA,gBALD,eAMH;AAAS,UAAA,SAAS,EAAC,uBAAnB;AAA2C,UAAA,OAAO,EAAE,MAAIN,WAAW,EAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANG;AAAA,SAAoCI,KAApC;AAAA;AAAA;AAAA;AAAA,cAAP;AAQH,KATW;AAFpB,mBADJ;AAgBH,CAjCD;;GAAMtB,iB;UACaF,W;;;KADbE,iB;AAmCN,eAAeA,iBAAf","sourcesContent":["import React, {FC, FormEvent, useMemo, useState} from 'react';\r\nimport \"../listboard.scss\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport * as actions from \"../../../../store/action/index\";\r\n\r\ninterface propsLisBoard {\r\n    listTask: Array<Object>,\r\n    indexState: number,\r\n    hideValue: (index: number) => void,\r\n    showValue: (index: number) => void,\r\n}\r\n\r\nconst Childrenlistboard: React.FC<propsLisBoard> = ({listTask, indexState, hideValue, showValue}) => {\r\n    let dispatch = useDispatch();\r\n    let [hideshowAddTask,setHideShowAddTask] = useState(false as boolean);\r\n    let [valuePutTask, setValuePutTask] = useState() as any;\r\n    const changeValue = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValuePutTask(event.target.value);\r\n    }\r\n    const putValueTask = async (id: number) => {\r\n        let action = await actions.putTask(id, valuePutTask);\r\n        await dispatch(action);\r\n    }\r\n    const showAddTask = () => {\r\n        setHideShowAddTask(true)\r\n    }\r\n    const hideAddTask = () => {\r\n        setHideShowAddTask(false)\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                listTask && listTask.map((res: any, index: number) => {\r\n                    return <form className=\"itemget-task\" key={index}\r\n                                 onSubmit={() => valuePutTask ? putValueTask(res._id) : ''}>\r\n                        {indexState === index ? <input key={index} defaultValue={res.title}\r\n                                                       onChange={(event) => changeValue(event)}\r\n                                                       onClick={() => hideValue(index)}/> :\r\n                            <span className=\"itemget-task__span\" onClick={() => showValue(index)}>{res.title}</span>}\r\n                        <button  className=\"itemget-task__AddTask\" onClick={()=>showAddTask()} >Add Task</button>\r\n                    </form>\r\n                })\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Childrenlistboard;\r\n"]},"metadata":{},"sourceType":"module"}