[{"D:\\todolistapplist\\src\\index.tsx":"1","D:\\todolistapplist\\src\\reportWebVitals.ts":"2","D:\\todolistapplist\\src\\App.tsx":"3","D:\\todolistapplist\\src\\component\\login\\login.tsx":"4","D:\\todolistapplist\\src\\component\\main\\main.tsx":"5","D:\\todolistapplist\\src\\component\\bodyhome\\bodyhome.tsx":"6","D:\\todolistapplist\\src\\component\\bodyTask\\bodytask.tsx":"7","D:\\todolistapplist\\src\\store\\store.tsx":"8","D:\\todolistapplist\\src\\component\\Navigation\\Navigation.tsx":"9","D:\\todolistapplist\\src\\store\\redux\\main.tsx":"10","D:\\todolistapplist\\src\\store\\action\\actiontype.js":"11","D:\\todolistapplist\\src\\store\\shared\\utility.js":"12","D:\\todolistapplist\\src\\store\\saga\\index.tsx":"13","D:\\todolistapplist\\src\\store\\saga\\login.tsx":"14","D:\\todolistapplist\\src\\enviroment\\enviroment.js":"15","D:\\todolistapplist\\src\\store\\action\\index.js":"16","D:\\todolistapplist\\src\\store\\action\\login.tsx":"17","D:\\todolistapplist\\src\\component\\spinner\\spinner.tsx":"18","D:\\todolistapplist\\src\\component\\Navbody\\navbody.tsx":"19","D:\\todolistapplist\\src\\component\\childrenbodytask\\childrenbodytask.tsx":"20","D:\\todolistapplist\\src\\component\\Navbody\\logout\\logout.tsx":"21","D:\\todolistapplist\\src\\component\\childrenbodytask\\taskcontrol\\taskcontrol.tsx":"22","D:\\todolistapplist\\src\\component\\childrenbodytask\\listtask\\listtask.tsx":"23","D:\\todolistapplist\\src\\component\\childrenbodytask\\listboard\\listboard.tsx":"24","D:\\todolistapplist\\src\\component\\childrenbodytask\\constant\\constant.js":"25","D:\\todolistapplist\\src\\store\\saga\\main.tsx":"26","D:\\todolistapplist\\src\\store\\action\\main.tsx":"27","D:\\todolistapplist\\src\\component\\childrenbodytask\\listboard\\childrenlistboard\\childrenlistboard.tsx":"28","D:\\todolistapplist\\src\\component\\signUp\\signup.tsx":"29","D:\\todolistapplist\\src\\component\\childrenbodyhome\\childrenbodyhome.tsx":"30","D:\\todolistapplist\\src\\router\\router.tsx":"31","D:\\todolistapplist\\src\\component\\Navigation\\menutabNav\\MenuTabNav.tsx":"32","D:\\todolistapplist\\src\\component\\childrenbodyhome\\listHome\\listhome.tsx":"33","D:\\todolistapplist\\src\\component\\Navbody\\NavbodyHome\\NavbodyHome.tsx":"34","D:\\todolistapplist\\src\\component\\Navbody\\NavbodyTask\\NavbodyTask.tsx":"35"},{"size":255,"mtime":1626598128437,"results":"36","hashOfConfig":"37"},{"size":425,"mtime":1615866213205,"results":"38","hashOfConfig":"37"},{"size":198,"mtime":1630780644189,"results":"39","hashOfConfig":"37"},{"size":2317,"mtime":1627320018878,"results":"40","hashOfConfig":"37"},{"size":210,"mtime":1630598319970,"results":"41","hashOfConfig":"37"},{"size":372,"mtime":1630745530668,"results":"42","hashOfConfig":"37"},{"size":375,"mtime":1630747196455,"results":"43","hashOfConfig":"37"},{"size":905,"mtime":1630603141473,"results":"44","hashOfConfig":"37"},{"size":2700,"mtime":1631054849496,"results":"45","hashOfConfig":"37"},{"size":1337,"mtime":1631009350892,"results":"46","hashOfConfig":"37"},{"size":355,"mtime":1631009165329,"results":"47","hashOfConfig":"37"},{"size":142,"mtime":1630603141481,"results":"48","hashOfConfig":"37"},{"size":556,"mtime":1629051042546,"results":"49","hashOfConfig":"37"},{"size":528,"mtime":1630603141498,"results":"50","hashOfConfig":"37"},{"size":71,"mtime":1630603180329,"results":"51","hashOfConfig":"37"},{"size":185,"mtime":1631009350967,"results":"52","hashOfConfig":"37"},{"size":206,"mtime":1627051528107,"results":"53","hashOfConfig":"37"},{"size":820,"mtime":1630603180213,"results":"54","hashOfConfig":"37"},{"size":2288,"mtime":1631058792619,"results":"55","hashOfConfig":"37"},{"size":1076,"mtime":1631013712794,"results":"56","hashOfConfig":"37"},{"size":195,"mtime":1627129102792,"results":"57","hashOfConfig":"37"},{"size":543,"mtime":1630576952648,"results":"58","hashOfConfig":"37"},{"size":192,"mtime":1627232792001,"results":"59","hashOfConfig":"37"},{"size":2712,"mtime":1630576891635,"results":"60","hashOfConfig":"37"},{"size":117,"mtime":1627214934535,"results":"61","hashOfConfig":"37"},{"size":1114,"mtime":1630603141505,"results":"62","hashOfConfig":"37"},{"size":1085,"mtime":1631009350957,"results":"63","hashOfConfig":"37"},{"size":2564,"mtime":1629654200368,"results":"64","hashOfConfig":"37"},{"size":816,"mtime":1630603657369,"results":"65","hashOfConfig":"37"},{"size":976,"mtime":1631013686004,"results":"66","hashOfConfig":"37"},{"size":1122,"mtime":1630780684993,"results":"67","hashOfConfig":"37"},{"size":648,"mtime":1630817443053,"results":"68","hashOfConfig":"37"},{"size":1145,"mtime":1631007991766,"results":"69","hashOfConfig":"37"},{"size":1349,"mtime":1631054402422,"results":"70","hashOfConfig":"37"},{"size":2105,"mtime":1631051022651,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},"bj4yos",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"75"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"75"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"75"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"75"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"75"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"75"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"75"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"75"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"75"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"75"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"75"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"D:\\todolistapplist\\src\\index.tsx",["156"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {app} from \"../src/store/store\";\nReactDOM.render(\n    app,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n",["157","158"],"D:\\todolistapplist\\src\\reportWebVitals.ts",[],"D:\\todolistapplist\\src\\App.tsx",[],"D:\\todolistapplist\\src\\component\\login\\login.tsx",["159"],"import React, {ChangeEvent, FormEvent, useState} from 'react';\r\nimport \"./login.scss\";\r\nimport * as loginAction from \"../../store/action/index\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport Spinner from \"../spinner/spinner\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Login = () => {\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n    const [value,setValue] = useState({\r\n        email: \"\",\r\n        password:\"\"\r\n    });\r\n\r\n    const [isLoading,setIsLoading] = useState(false);\r\n    const loginTrello = async (event: any) =>{\r\n        event.preventDefault();\r\n        setTimeout(async ()=>{\r\n            let action =  loginAction.login(value);\r\n            await dispatch(action);\r\n            await setIsLoading(true);\r\n            await history.push(\"/main\");\r\n        }, 1000)\r\n\r\n    }\r\n    const changeValue = (event: ChangeEvent<HTMLInputElement>)  => {\r\n        setValue({...value,[event.target.name]: event.target.value})\r\n    }\r\n    return (\r\n            <div className=\"container\">\r\n                    <div className=\"itemtitle\">\r\n                        <h3>Trello</h3>\r\n                    </div>\r\n                    <form className=\"itemform\" onSubmit={(event)=>loginTrello(event)}>\r\n                        <div className=\"itemform-title\">\r\n                            <h3>Đăng Nhập Vào Trello</h3>\r\n                        </div>\r\n                        <div className=\"itemform-email\">\r\n                            <input placeholder=\"Nhập Email\"  type=\"text\" name=\"email\" onChange={(event)=>changeValue(event)}  />\r\n                        </div>\r\n                        <div className=\"itemform-password\">\r\n                            <input placeholder=\"Nhập password\" type=\"password\" name=\"password\" onChange={(event)=>changeValue(event)} />\r\n                        </div>\r\n                        <div className=\"itemform-buttonlogin\">\r\n                            <button  onClick={(event)=>loginTrello(event)} >Đăng Nhập</button>\r\n                        </div>\r\n                        <div className=\"itemform-textOr\">\r\n                            <span>Hoặc</span>\r\n                        </div>\r\n                    </form>\r\n                {isLoading && <Spinner />}\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","D:\\todolistapplist\\src\\component\\main\\main.tsx",[],"D:\\todolistapplist\\src\\component\\bodyhome\\bodyhome.tsx",[],"D:\\todolistapplist\\src\\component\\bodyTask\\bodytask.tsx",[],"D:\\todolistapplist\\src\\store\\store.tsx",[],"D:\\todolistapplist\\src\\component\\Navigation\\Navigation.tsx",["160","161"],"import React, {FC, useState} from 'react';\r\nimport \"./Navigation.scss\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport * as actions from \"../../store/action/index\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport  {constantMenu} from \"../Navigation/menutabNav/MenuTabNav\";\r\n\r\nconst Navigation = () => {\r\n    let dispatch = useDispatch();\r\n    let clickBorder = (index: number) => {\r\n        let navigation = document.getElementsByClassName(\"item-body__navigation\") as HTMLCollectionOf<any>;\r\n        for (let i = 0; i < navigation.length; i++) {\r\n            navigation[i].style.background = \"\";\r\n            navigation[i].style.width = \"\";\r\n            navigation[i].style.height = \"\";\r\n            navigation[i].style.cursor = \"\";\r\n        }\r\n        navigation[index].style.background = \"#FFFFFF\";\r\n        navigation[index].style.width = \"100%\";\r\n        navigation[index].style.height = \"40px\";\r\n        navigation[index].style.cursor = \"pointer\";\r\n    }\r\n    let isMenu: boolean = useSelector((state: any) => state.main.isMenu);\r\n    const clickMenu =  async () => {\r\n        let action = actions.setMenu(true);\r\n        dispatch(action);\r\n    }\r\n    return (\r\n        <div className={\"containerNavigation \" + (isMenu && \"actives\")}>\r\n            <div className=\"item-header\">\r\n                <div className=\"item-header__logo\">\r\n                    <h3>Trello</h3>\r\n                </div>\r\n                <div className=\"item-header__icon\">\r\n                    <div className=\"item-header__icon--Menu\">\r\n                        <span className=\"iconMenu\" onClick={() => clickMenu()}> <MenuIcon color=\"inherit\"\r\n                                                                                          style={{fontSize: '30px'}}/></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"item-body\">\r\n                {\r\n                    constantMenu.map((res: any, index: number) => (\r\n                        <Link to={res.link} style={{textDecoration: \"none\"}} className=\"item-body__navigation\" key={index} onClick={() => clickBorder(index)}  >\r\n                            <div >\r\n                                <div className=\"item-body__navigation--MenuBar\">\r\n                                    <div className=\"iconTopbar\">{res.icon}</div>\r\n                                    <div className=\"NameTopbar\"> {res.name}</div>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                        ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;\r\n","D:\\todolistapplist\\src\\store\\redux\\main.tsx",[],"D:\\todolistapplist\\src\\store\\action\\actiontype.js",[],["162","163"],"D:\\todolistapplist\\src\\store\\shared\\utility.js",[],"D:\\todolistapplist\\src\\store\\saga\\index.tsx",["164"],"import { takeEvery, all, takeLatest } from \"redux-saga/effects\";\r\nimport  * as actionTypes from '../action/actiontype';\r\nimport { loginChat } from \"./login\";\r\nimport {addTask, getTask, putTask} from \"./main\";\r\nexport function* watchLogin() {\r\n    yield all([\r\n         takeEvery(actionTypes.LOGIN_APP,loginChat)\r\n        ])\r\n}\r\n\r\nexport function* watchTodoTask() {\r\n    yield all([\r\n        takeEvery(actionTypes.ADD_TASK_APP,addTask),\r\n        takeEvery(actionTypes.GET_TASK_APP,getTask),\r\n        takeEvery(actionTypes.PUT_TASK_APP,putTask),\r\n    ])\r\n}\r\n","D:\\todolistapplist\\src\\store\\saga\\login.tsx",["165","166"],"import {put, call} from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport {enviroment} from \"../../enviroment/enviroment\";\r\n\r\nexport function* loginChat(actions: any) {\r\n    const {email, password} = actions;\r\n    let body = {\r\n        email: email,\r\n        password: password\r\n    }\r\n    yield axios.post(enviroment.api + \"/user/login\", body).then(res => {\r\n        console.log(res)\r\n        localStorage.setItem('token', JSON.stringify(res.data.token));\r\n    }).catch(err => {\r\n        console.log(err)\r\n    })\r\n\r\n}\r\n","D:\\todolistapplist\\src\\enviroment\\enviroment.js",[],"D:\\todolistapplist\\src\\store\\action\\index.js",[],"D:\\todolistapplist\\src\\store\\action\\login.tsx",[],"D:\\todolistapplist\\src\\component\\spinner\\spinner.tsx",[],"D:\\todolistapplist\\src\\component\\Navbody\\navbody.tsx",[],"D:\\todolistapplist\\src\\component\\childrenbodytask\\childrenbodytask.tsx",["167","168","169"],"import React, {useEffect, useState} from 'react';\r\nimport \"./childrenbodytask.scss\";\r\nimport Navbody from \"../Navbody/navbody\";\r\nimport Taskcontrol from \"./taskcontrol/taskcontrol\";\r\nimport {tabBar } from \"./constant/constant\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport * as actions from \"../../store/action\";\r\n\r\n\r\ninterface props {\r\n\r\n}\r\nconst Childrenbodytask:React.FC<props> = ({}) => {\r\n    const [tab,setTab] = useState({});\r\n    const switchComponent = (name:string) => {\r\n        setTab(name)\r\n    }\r\n    let isMenu: boolean = useSelector((state:any)=>state.main.isMenu);\r\n    let dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        let actionIsTask =  actions.setTask(true);\r\n        dispatch(actionIsTask);\r\n        let actionIsHome =  actions.setHome(false);\r\n        dispatch(actionIsHome);\r\n    },[])\r\n    return (\r\n        <div className={\"childrenBodyTask \" + (isMenu && \"active\")}>\r\n            <Navbody switchs={switchComponent} />\r\n            <Taskcontrol tab={tab} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Childrenbodytask;\r\n","D:\\todolistapplist\\src\\component\\Navbody\\logout\\logout.tsx",[],"D:\\todolistapplist\\src\\component\\childrenbodytask\\taskcontrol\\taskcontrol.tsx",["170"],"import React from 'react';\r\nimport {tabBar} from \"../constant/constant\";\r\nimport Listtask from \"../listtask/listtask\";\r\nimport Listboard from \"../listboard/listboard\";\r\ninterface props {\r\n    tab:Object,\r\n}\r\nconst Taskcontrol:React.FC<props> = ({tab}) => {\r\n\r\n    switch (tab)\r\n    {\r\n        case tabBar.List:\r\n            return <Listtask />;\r\n        case tabBar.Board:\r\n            return <Listboard  />;\r\n        default :\r\n            return <Listboard  />;\r\n    }\r\n    return (\r\n        <></>\r\n    );\r\n}\r\n\r\nexport default Taskcontrol;\r\n","D:\\todolistapplist\\src\\component\\childrenbodytask\\listtask\\listtask.tsx",[],"D:\\todolistapplist\\src\\component\\childrenbodytask\\listboard\\listboard.tsx",["171","172"],"import React, {FormEvent, useEffect, useState} from 'react';\r\nimport \"./listboard.scss\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport * as actions from \"../../../store/action/index\"\r\nimport Childrenlistboard from \"./childrenlistboard/childrenlistboard\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\ninterface props{\r\n\r\n}\r\nconst Listboard:React.FC<props> = ({}) => {\r\n    const [title, setTitle] = useState();\r\n    const [isClickTitle, setIsClickTitle] = useState(false as boolean);\r\n    const [order, setOrder] = useState(0 as number);\r\n    const [indexs, setIndexs] = useState(0 as number);\r\n    let listTask = useSelector((state: any) => state.main.listTask);\r\n    let dispatch = useDispatch();\r\n    const changeValueTitle = (event: any) => {\r\n        event.preventDefault();\r\n        setTitle(event.target.value)\r\n    }\r\n    const postTaskTitle = async (event: FormEvent<any>) => {\r\n        event.preventDefault();\r\n        if (listTask.data) {\r\n            listTask.data.length += 1;\r\n            setOrder(listTask.data.length)\r\n            let action = await actions.AddTask(title, order);\r\n            await dispatch(action);\r\n        }\r\n    }\r\n    const hideValue = (index: number) => {\r\n        setIndexs(index)\r\n    }\r\n    const showValue = (index: number) => {\r\n        setIndexs(index);\r\n    }\r\n    const showTitle = () => {\r\n        setIsClickTitle(true)\r\n    }\r\n    const hideTitle = () => {\r\n        setIsClickTitle(false)\r\n    }\r\n    useEffect(() => {\r\n        let action = actions.GetTask();\r\n        dispatch(action);\r\n    }, [])\r\n    return (\r\n        <div className=\"containerListBoard\">\r\n            <Childrenlistboard\r\n                listTask={listTask.data}\r\n                indexState={indexs}\r\n                hideValue={hideValue}\r\n                showValue={showValue}/>\r\n\r\n            <div>\r\n                <form className=\"itemadd-task\" onSubmit={(event) => {\r\n                    postTaskTitle(event)\r\n                }}>\r\n                    <div>\r\n                        {isClickTitle &&\r\n                        <input placeholder=\"add Task\" name=\"title\" onChange={(event) => changeValueTitle(event)}/>}\r\n                        {isClickTitle && <button onClick={(event) => {\r\n                            postTaskTitle(event)}}>Thêm</button>}\r\n                        {isClickTitle &&\r\n                        <CloseIcon style={{cursor: 'pointer', fontSize: \"25px\",}} onClick={() => hideTitle()}/>}\r\n                    </div>\r\n                    {!isClickTitle && <span style={{cursor: 'pointer'}} onClick={() => showTitle()}>Thêm Task</span>}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Listboard;\r\n","D:\\todolistapplist\\src\\component\\childrenbodytask\\constant\\constant.js",[],"D:\\todolistapplist\\src\\store\\saga\\main.tsx",["173"],"import {put, call} from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport {enviroment} from \"../../enviroment/enviroment\";\r\nimport * as action from \"../action/index\";\r\n\r\nexport function* addTask(actions: any) {\r\n    let {titleValue} = actions;\r\n    console.log(\"title\", titleValue)\r\n    let body = {\r\n        title: actions.title,\r\n        order: actions.order\r\n    };\r\n    console.log(\"123\", body);\r\n    yield axios.post(enviroment.api + \"/main/posttask\", body).then(res => {\r\n        console.log(res)\r\n    });\r\n    yield getTask();\r\n}\r\n\r\nexport function* getTask() {\r\n    let response: Promise<Object> = yield axios.get(enviroment.api + \"/main/gettask\");\r\n    try {\r\n        yield put(action.GetTaskList(response))\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport function* putTask(actions: any) {\r\n    let body = {\r\n        title: actions.title\r\n    };\r\n    let idParams = actions.id;\r\n    console.log(body);\r\n    yield axios.put(enviroment.api + `/main/puttask?id=${idParams}`, body).then((res) => {\r\n        console.log(res)\r\n    }).catch(err => {\r\n        console.log(err)\r\n    })\r\n}\r\n","D:\\todolistapplist\\src\\store\\action\\main.tsx",[],"D:\\todolistapplist\\src\\component\\childrenbodytask\\listboard\\childrenlistboard\\childrenlistboard.tsx",["174","175","176"],"import React, {FC, FormEvent, useMemo, useState} from 'react';\r\nimport \"../listboard.scss\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport * as actions from \"../../../../store/action/index\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\ninterface propsLisBoard {\r\n    listTask: Array<Object>,\r\n    indexState: number,\r\n    hideValue: (index: number) => void,\r\n    showValue: (index: number) => void,\r\n}\r\n\r\nconst Childrenlistboard: React.FC<propsLisBoard> = ({listTask, indexState, hideValue, showValue}) => {\r\n    let dispatch = useDispatch();\r\n    let [hideshowAddTask,setHideShowAddTask] = useState(false as boolean);\r\n    let [valuePutTask, setValuePutTask] = useState() as any;\r\n    let [indexInAddTask,setIndexInAddTask] = useState(0 as number);\r\n    const changeValue = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValuePutTask(event.target.value);\r\n    }\r\n    const putValueTask = async (id: number) => {\r\n        let action = await actions.putTask(id, valuePutTask);\r\n        await dispatch(action);\r\n    }\r\n    const showAddTask = (event:any,index:number) => {\r\n        event.preventDefault();\r\n        setIndexInAddTask(index);\r\n        setHideShowAddTask(true)\r\n    }\r\n    const hideAddTask = (event:any,index:number) => {\r\n        event.preventDefault();\r\n        setIndexInAddTask(index);\r\n        setHideShowAddTask(false)\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                listTask && listTask.map((res: any, index: number) => {\r\n                    return <form className=\"itemget--task\" key={index}\r\n                                 onSubmit={() => putValueTask(res._id) }>\r\n                        {indexState === index ? <input className=\"itemget--task__input\" key={index} defaultValue={res.title}\r\n                                                       onChange={(event) => changeValue(event)}\r\n                                                       onClick={() => hideValue(index)}/> :\r\n                            <span className=\"itemget--task__span\" onClick={() => showValue(index)}>{res.title}</span>}\r\n                        {\r\n                            hideshowAddTask && indexInAddTask === index && <div onClick={(event) => hideAddTask(event, index)}><input/></div>\r\n                        }\r\n                            <button  className=\"itemget--task__AddTask\" onClick={(event)=>showAddTask(event,index)} ><AddIcon style={{fontSize:\"15px\"}}  />Add Task</button>\r\n\r\n                    </form>\r\n                })\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Childrenlistboard;\r\n","D:\\todolistapplist\\src\\component\\signUp\\signup.tsx",[],"D:\\todolistapplist\\src\\component\\childrenbodyhome\\childrenbodyhome.tsx",["177","178"],"import React, {useEffect, useState} from 'react';\r\nimport \"./childrenbodyhome.scss\";\r\nimport Navbody from \"../Navbody/navbody\";\r\nimport * as actions from \"../../store/action/index\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Listhome from \"./listHome/listhome\";\r\n\r\nconst Childrenbodyhome = () => {\r\n    const [tab,setTab] = useState({});\r\n    const switchComponent = (name:string) => {\r\n        setTab(name)\r\n    }\r\n    let dispatch = useDispatch();\r\n    let isMenu: boolean = useSelector((state:any)=>state.main.isMenu);\r\n    useEffect(()=>{\r\n        let actionIsHome =  actions.setHome(true);\r\n        dispatch(actionIsHome);\r\n        let actionIsTask =  actions.setTask(false);\r\n        dispatch(actionIsTask);\r\n    },[])\r\n    return (\r\n        <div className={\"container-childrenHome \" + (isMenu && \"active\")}>\r\n            <Navbody switchs={switchComponent}  />\r\n            <Listhome />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Childrenbodyhome;\r\n","D:\\todolistapplist\\src\\router\\router.tsx",[],"D:\\todolistapplist\\src\\component\\Navigation\\menutabNav\\MenuTabNav.tsx",[],"D:\\todolistapplist\\src\\component\\childrenbodyhome\\listHome\\listhome.tsx",["179"],"import React from 'react';\r\nimport \"./listhome.scss\";\r\n\r\nconst Listhome = () => {\r\n    return (\r\n        <div className=\"container--project\" >\r\n            <div className=\"container--project__top\">\r\n                <div className=\"container--project__toptitle\">\r\n                    <div>Tasks Due Soon</div>\r\n                    <div><a href=\"#\">See all my tasks</a></div>\r\n                </div>\r\n                <div className=\"container--project__content\">\r\n                    123\r\n                </div>\r\n            </div>\r\n            <div className=\"container--project__bottom\">\r\n                <div className=\"container--project__toptitles\">\r\n                    <div>Recent Projects</div>\r\n                    <div>123</div>\r\n                </div>\r\n                <div className=\"container--project__createproject\">\r\n                    <div className=\"createProject\">\r\n                    </div>\r\n                    <div className=\"createProjectName\">\r\n                        <span>NewProject</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Listhome;\r\n","D:\\todolistapplist\\src\\component\\Navbody\\NavbodyHome\\NavbodyHome.tsx",[],"D:\\todolistapplist\\src\\component\\Navbody\\NavbodyTask\\NavbodyTask.tsx",[],{"ruleId":"180","severity":1,"message":"181","line":1,"column":8,"nodeType":"182","messageId":"183","endLine":1,"endColumn":13},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"180","severity":1,"message":"188","line":1,"column":29,"nodeType":"182","messageId":"183","endLine":1,"endColumn":38},{"ruleId":"180","severity":1,"message":"189","line":1,"column":16,"nodeType":"182","messageId":"183","endLine":1,"endColumn":18},{"ruleId":"180","severity":1,"message":"190","line":1,"column":20,"nodeType":"182","messageId":"183","endLine":1,"endColumn":28},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"180","severity":1,"message":"191","line":1,"column":26,"nodeType":"182","messageId":"183","endLine":1,"endColumn":36},{"ruleId":"180","severity":1,"message":"192","line":1,"column":9,"nodeType":"182","messageId":"183","endLine":1,"endColumn":12},{"ruleId":"180","severity":1,"message":"193","line":1,"column":14,"nodeType":"182","messageId":"183","endLine":1,"endColumn":18},{"ruleId":"180","severity":1,"message":"194","line":5,"column":9,"nodeType":"182","messageId":"183","endLine":5,"endColumn":15},{"ruleId":"195","severity":1,"message":"196","line":13,"column":43,"nodeType":"197","messageId":"198","endLine":13,"endColumn":45},{"ruleId":"199","severity":1,"message":"200","line":25,"column":7,"nodeType":"201","endLine":25,"endColumn":9,"suggestions":"202"},{"ruleId":"203","severity":1,"message":"204","line":19,"column":5,"nodeType":"205","messageId":"206","endLine":21,"endColumn":7},{"ruleId":"195","severity":1,"message":"196","line":11,"column":36,"nodeType":"197","messageId":"198","endLine":11,"endColumn":38},{"ruleId":"199","severity":1,"message":"200","line":46,"column":8,"nodeType":"201","endLine":46,"endColumn":10,"suggestions":"207"},{"ruleId":"180","severity":1,"message":"193","line":1,"column":14,"nodeType":"182","messageId":"183","endLine":1,"endColumn":18},{"ruleId":"180","severity":1,"message":"189","line":1,"column":16,"nodeType":"182","messageId":"183","endLine":1,"endColumn":18},{"ruleId":"180","severity":1,"message":"188","line":1,"column":20,"nodeType":"182","messageId":"183","endLine":1,"endColumn":29},{"ruleId":"180","severity":1,"message":"208","line":1,"column":31,"nodeType":"182","messageId":"183","endLine":1,"endColumn":38},{"ruleId":"180","severity":1,"message":"209","line":9,"column":12,"nodeType":"182","messageId":"183","endLine":9,"endColumn":15},{"ruleId":"199","severity":1,"message":"200","line":20,"column":7,"nodeType":"201","endLine":20,"endColumn":9,"suggestions":"210"},{"ruleId":"211","severity":1,"message":"212","line":10,"column":26,"nodeType":"213","endLine":10,"endColumn":38},"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-native-reassign",["214"],"no-negated-in-lhs",["215"],"'FormEvent' is defined but never used.","'FC' is defined but never used.","'useState' is defined but never used.","'takeLatest' is defined but never used.","'put' is defined but never used.","'call' is defined but never used.","'tabBar' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["216"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode",["217"],"'useMemo' is defined but never used.","'tab' is assigned a value but never used.",["218"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"219","fix":"221"},{"desc":"219","fix":"222"},"Update the dependencies array to be: [dispatch]",{"range":"223","text":"224"},{"range":"225","text":"224"},{"range":"226","text":"224"},[834,836],"[dispatch]",[1570,1572],[740,742]]